@using PagedList.Mvc
@model PagedList.IPagedList<AplicacionTiendita.Models.T_Producto>

@{
    ViewBag.Title = "Productos";
}

<h2 class="text-center text-primary mb-4">Productos</h2>

<p>
    @Html.ActionLink("Crear Nuevo Producto", "Create", null, new { @class = "btn btn-primary mb-3" })
</p>

<!-- Formulario de Búsqueda -->
<div class="form-group">
    <input type="text" id="searchInput" class="form-control mb-3" placeholder="Buscar por nombre de producto..." />
</div>

<div class="table-responsive">
    <table class="table table-hover table-striped table-bordered" id="productoTable">
        <thead class="thead-dark">
            <tr>
                <th>@Html.DisplayNameFor(model => model.First().categoria.codcat)</th>
                <th>@Html.DisplayNameFor(model => model.First().categoria.nomcat)</th>
                <th>@Html.DisplayNameFor(model => model.First().nompro)</th>
                <th>@Html.DisplayNameFor(model => model.First().despro)</th>
                <th>@Html.DisplayNameFor(model => model.First().prepro)</th>
                <th>@Html.DisplayNameFor(model => model.First().canpro)</th>
                <th>@Html.DisplayNameFor(model => model.First().estpro)</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.categoria.codcat)</td>
                    <td>@Html.DisplayFor(modelItem => item.categoria.nomcat)</td>
                    <td>@Html.DisplayFor(modelItem => item.nompro)</td>
                    <td>@Html.DisplayFor(modelItem => item.despro)</td>
                    <td>@Html.DisplayFor(modelItem => item.prepro)</td>
                    <td>@Html.DisplayFor(modelItem => item.canpro)</td>
                    <td>@Html.DisplayFor(modelItem => item.estpro)</td>
                    <td>
                        @Html.ActionLink(" ", "Edit", new { id = item.codpro }, new { @class = "btn btn-warning btn-sm bi bi-pencil-square", @title = "Editar" })
                        @Html.ActionLink(" ", "Details", new { id = item.codpro }, new { @class = "btn btn-info btn-sm bi bi-info-circle", @title = "Detalles" })
                        @Html.ActionLink(" ", "Delete", new { id = item.codpro }, new { @class = "btn btn-danger btn-sm bi bi-trash", @title = "Eliminar" })
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Paginación -->
<div class="text-center">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchString = ViewBag.CurrentFilter }), new PagedListRenderOptions
    {
        Display = PagedListDisplayMode.IfNeeded
    })
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            // Espaciado en la paginación
            $('.pagination li').addClass('mx-1');

            // Añadir iconos a la paginación
            $('.pagination li:first-child a').html('<i class="bi bi-chevron-left"></i>'); // Icono anterior
            $('.pagination li:last-child a').html('<i class="bi bi-chevron-right"></i>'); // Icono siguiente

            // Búsqueda en la tabla
            $('#searchInput').on('keyup', function () {
                var searchString = $(this).val().toLowerCase();
                $('#productoTable tbody tr').each(function () {
                    var cellText = $(this).find('td:nth-child(3)').text().toLowerCase();
                    $(this).toggle(cellText.includes(searchString));
                });
            });
        });
    </script>
}
