@model AplicacionTiendita.Models.T_Producto

@{
    ViewBag.Title = "Editar Producto";
}

<h2>Editar Producto</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Detalles del Producto</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.codpro)

        <div class="form-group row">
            @Html.LabelFor(model => model.nompro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nompro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nompro, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.despro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.despro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.despro, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.prepro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.prepro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.prepro, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.canpro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.canpro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.canpro, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.estpro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="form-check">
                    @Html.EditorFor(model => model.estpro, new { htmlAttributes = new { @class = "form-check-input" } })
                    @Html.ValidationMessageFor(model => model.estpro, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.codcat, "Categoría", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("codcat", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.codcat, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-success">
                    <i class="fas fa-save"></i> Guardar
                </button>
                @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-secondary ml-2" })
            </div>
        </div>
    </div>
}

@section Scripts {
    <script src="https://kit.fontawesome.com/a076d05399.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
}
